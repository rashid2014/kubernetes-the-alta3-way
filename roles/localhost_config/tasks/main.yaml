#``````````````````````````````````````````````````````````
# Install fping
#``````````````````````````````````````````````````````````

- name: install fping for checking if nodes are alive
  apt:
   name: fping
   state: present
  become: yes

#- name: create directories for the kubernetes nodes
#  file:
#    path: "{{ item }}"
#    state: directory
#    mode: "0755"
#  with_items:
#   - "/var/lib/kubernetes"
#  become: yes

#TODO: these node-routes are hard coded, on a day far far from now, MAYBE templatized and smartly created
- name: Create the pod-routes file for each node. Sets routes to get outbound connections from the calico network
  copy: 
    src: "{{  role_path  }}/files/node-routes"
    dest: "/etc/network/if-up.d/node-routes"
    mode: "0775"
  become: yes

# Comment out because routes from host to nodes only make sense whey on the k8s network. 
#- name: configure routes to nodes (pod routes)
#  command: "ip route add {{ hostvars[item].cni_host_subnet }} via {{ hostvars[item].ansible_host }}"
#  loop: "{{ groups['nodes'] }}"
#  become: yes
#  ignore_errors: True



#``````````````````````````````````````````````````````````
# Locally configure kubernetes 
#``````````````````````````````````````````````````````````

- name: Verify the cluster is set on the beachhead control machine
  shell: kubectl config set-cluster {{ cluster_name }} \
         --certificate-authority={{ ca_pem_file }}  \
         --embed-certs=true \
         --server={{ localhost_lb_apiserver_address }}

- name: Verify the credentials are set on the beachhead control machine
  shell: kubectl config set-credentials admin \ 
         --client-certificate={{ admin_pem_file }} \
         --client-key={{ admin_key_file }} \ 

- name: Verify the context is set for the admin user
  shell: kubectl config set-context {{ cluster_name }} 
         --cluster={{ cluster_name }} \
         --user=admin

- name: Use the context for the config file
  shell: kubectl config use-context {{ cluster_name }}

