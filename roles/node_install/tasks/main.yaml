---
#-----------------------------------------------------------------------------
# Create Directories for nodes
#-----------------------------------------------------------------------------

- name: create directories for the kubernetes nodes
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
   - "/etc/cni/net.d"
   - "/opt/cni/bin"
   - "/var/lib/kubelet"
   - "/var/lib/kube-proxy"
   - "/var/lib/kubernetes"
  become: yes



#-----------------------------------------------------------------------------
# Copy Certs to the Kubernetes nodes
#-----------------------------------------------------------------------------
- name: Copy Certs to Nodes
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode }}'
  loop: "{{ deployed_cert_and_config_files }}"
  loop_control:
     label: "File = {{ item.dest }}"
  become: yes

- name: Copy certs/keys/configs to Nodes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop: 
   - src: "{{ cert_dir }}/{{ inventory_hostname }}.pem"
     dest: "/var/lib/kubelet/{{ inventory_hostname }}.pem"
     mode: "0664"
   - src: "{{ cert_dir }}/{{ inventory_hostname }}-key.pem"
     dest: "/var/lib/kubelet/{{ inventory_hostname }}-key.pem"
     mode: "0600"
   - src: "{{ config_dir }}/kube-proxy.kubeconfig"
     dest: "{{ kube_proxy_kubeconfig_path }}"
     mode: "0600"
   - src: "{{ config_dir }}/{{ inventory_hostname }}.kubeconfig"
     dest: "{{ kubelet_kubeconfig_path }}" 
     mode: "0600"
  loop_control:
     label: "File = {{ item.dest }}"
  become: yes


#/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
#-----------------------------------------------------------------------------
# Bootstrap Kubernetes Nodes
#-----------------------------------------------------------------------------
#/\/\/\/\/\/\/\/\/\//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

#-----------------------------------------------------------------------------
# Installing OS Dependencies 
#-----------------------------------------------------------------------------

- name: Install socat on the kubernetes nodes
  apt: 
    name: socat
    state: latest
  become: yes


#-----------------------------------------------------------------------------
# Downloading and Installing Node Binaries 
#-----------------------------------------------------------------------------

- name: Download Kubernetes kubectl 
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop:
   - url: "{{ kubectl.url }}"
     dest: "{{ kubectl.path }}"
     mode: '0755'
  become: yes    

- name: Download the Node services binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.path }}"
    mode: "{{ item.mode }}"
  loop: "{{ node_services }}"
  loop_control:
     label: "k8s v{{ k8s_version }} - {{ item.path }}"
  become: yes 

- name: Download and unarchive Node dependencies
  unarchive:
    remote_src: yes
    src: "{{ item.url }}"
    dest: "{{ item.dest }}"
  loop: "{{ node_dependencies }}"
  loop_control:
     label: "{{ item.name }}"
  become: yes 



#/\/\/\/\/\/\/\/\/\\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\
#-----------------------------------------------------------------------------
# Configure CNI Networking 
#-----------------------------------------------------------------------------
#/\/\/\/\/\/\/\/\/\\/\/\/\/\//\/\/\/\/\/\//\/\/\/\/\/\/\/\\/\/\/\/\/\/\/\/\/\/\

- name: Create the 10-bridge.conf file for each node. Provides networking info for pods deployed to this node
  template:
    src: "{{ role_path }}/templates/10-bridge.conf.j2"
    dest: "/etc/cni/net.d/10-bridge.conf"
    mode: "0664"
  become: yes

- name: Create the 99-loopback.conf file for each node. 
  copy: 
    src: "{{ role_path }}/files/99-loopback.conf"
    dest: "/etc/cni/net.d"
    mode: "0664"
  become: yes    

- name: Enable packet forwarding on the node 
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: True
    state: present
    reload: yes
  become: yes

- name: Enable br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present
  become: yes

- name: Persist br_netfilter kernell module loading (on reboot)
  copy: 
    dest: /etc/modules-load.d/br_netfilter.conf
    content: br_netfilter
  become: yes

#-----------------------------------------------------------------------------
# Configure the Kubelet
#-----------------------------------------------------------------------------


- name: Create the kubelet.service config file for each node
  template:
    src: "{{ item.service_j2 }}"
    dest: "{{ item.service_path }}"
  loop: "{{ node_services }}"
  loop_control:
     label: "{{ item.service_path }}"
  become: yes

#-----------------------------------------------------------------------------
# Install CNI patch  https://github.com/containerd/cri/issues/619
#-----------------------------------------------------------------------------
- name: Delete old portmap file
  file:
    state: absent
    path: /opt/cni/bin/portmap
  become: yes
  
- name: Download file with check (sha256)
  get_url:
    url: https://github.com/projectcalico/cni-plugin/releases/download/v1.9.1/portmap
    dest: /opt/cni/bin/
    mode: 0755
  become: yes
  
#-----------------------------------------------------------------------------
# Start the Worker Services 
#-----------------------------------------------------------------------------

- name: Do a reload of the daemons
  systemd: 
    daemon_reload: yes
  become: yes  

- name: Enable the k8s services
  systemd:
    enabled: yes
    name: "{{ item.name }}"
  loop: "{{ node_services }}"
  become: yes  

- name: Enable the containerd services
  systemd:
    enabled: yes
    name: "{{ item.name }}"
  loop: "{{ node_dependencies }}"
  become: yes

- name: Restart the k8s services
  systemd:
    state: restarted
    name: "{{ item.name }}"
  loop: "{{ node_services }}"
  become: yes  

- name: Restart the containerd services
  systemd:
    state: restarted
    name: "{{ item.name }}"
  loop: "{{ node_dependencies }}"
  become: yes
